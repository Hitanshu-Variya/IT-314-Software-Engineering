import java.util.Arrays;

class StackMethods {
    private int top;
    int size;
    int[] stack;

    public StackMethods(int arraySize) {
        size = arraySize;
        stack = new int[size];
        top = -1; 
    }

    public void push(int value) {
        if (top == size - 1) { 
            System.out.println("Stack is full, can't push a value");
        } else {
            top++; 
            stack[top] = value;
        }
    }

    public void pop() {
        if (!isEmpty()) {
            System.out.println("Popped value: " + stack[top]);
            top--; 
        } else {
            System.out.println("Can't pop...stack is empty");
        }
    }

    public boolean isEmpty() {
        return top == -1;
    }

    public void display() {
        if (isEmpty()) {
            System.out.println("\nStack is empty.");
        } else {
            System.out.print("\nStack contents: ");
            for (int i = 0; i <= top; i++) {
                System.out.print(stack[i] + " ");
            }
            System.out.println("\n");
        }
    }
}

class StackReviseDemo {
    public static void main(String[] args) {
        StackMethods newStack = new StackMethods(5); 
        newStack.push(10);  
        newStack.push(1);
        newStack.push(50);
        newStack.push(20);
        newStack.push(90);

        newStack.display(); 

        newStack.pop();      
        newStack.pop();
        newStack.pop();
        newStack.pop();
        
        newStack.display();  
    }
}

class Main {
    public static void main(String args[]) {
        System.out.print("Output: ");
        StackReviseDemo.main(args); 
    }
}

// Output: 
// Stack contents: 10 1 50 20 90 

// Popped value: 90
// Popped value: 20
// Popped value: 50
// Popped value: 1

// Stack contents: 10 